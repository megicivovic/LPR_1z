package org.neuroph.netbeans.wizards;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import org.neuroph.datasetgen.DataSetGenerator;
import org.neuroph.datasetgen.shapes.CircleGenerator;
import org.neuroph.datasetgen.shapes.DiamondGenerator;
import org.neuroph.datasetgen.shapes.ElipseGenerator;
import org.neuroph.datasetgen.shapes.MoonGenerator;
import org.neuroph.datasetgen.shapes.RandomPolynomialGenerator;
import org.neuroph.datasetgen.shapes.RingGenerator;
import org.neuroph.datasetgen.shapes.SquareGenerator;
import org.neuroph.datasetgen.shapes.XORGenerator;


public final class DataSetSampleVisualPanel1 extends JPanel {

    /**
     * Creates new form DataSetSampleVisualPanel1
     */
    public DataSetSampleVisualPanel1() {
        initComponents();
        initShapes(0, 0);
    }

    @Override
    public String getName() {
        return "Sample Dataset Settings";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboShapes = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        slideNumberOfPoints = new javax.swing.JSlider();
        labNumberOfPoints = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DataSetSampleVisualPanel1.class, "DataSetSampleVisualPanel1.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(DataSetSampleVisualPanel1.class, "DataSetSampleVisualPanel1.jLabel2.text")); // NOI18N

        slideNumberOfPoints.setBackground(new java.awt.Color(255, 255, 255));
        slideNumberOfPoints.setMaximum(2000);
        slideNumberOfPoints.setToolTipText(org.openide.util.NbBundle.getMessage(DataSetSampleVisualPanel1.class, "DataSetSampleVisualPanel1.slideNumberOfPoints.toolTipText")); // NOI18N
        slideNumberOfPoints.setValue(1000);
        slideNumberOfPoints.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slideNumberOfPointsStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(labNumberOfPoints, org.openide.util.NbBundle.getMessage(DataSetSampleVisualPanel1.class, "DataSetSampleVisualPanel1.labNumberOfPoints.text_1")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboShapes, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(slideNumberOfPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labNumberOfPoints, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboShapes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(slideNumberOfPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(labNumberOfPoints)))
                .addContainerGap(177, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    private DataSetGenerator[] shapes;

    public DataSetGenerator getSelectedShape() {
        initShapes(comboShapes.getSelectedIndex(), slideNumberOfPoints.getValue());
        return shapes[comboShapes.getSelectedIndex()];
    }

    private void initShapes(int shapeIndex, int numberOfPoints) {
        shapes = new DataSetGenerator[8];
        shapes[0] = new ElipseGenerator(numberOfPoints, 0, 0, 1, 0.5);//0.5, 0.5, 0.5, 0.25
        shapes[1] = new CircleGenerator(numberOfPoints, 0, 0, 0.5);//0.5, 0.5, 0.125
        shapes[2] = new RingGenerator(numberOfPoints, 0, 0, 0.125, 0.5);//0.5, 0.5, 0.0625, 0.25
        shapes[3] = new MoonGenerator(numberOfPoints, 0, 0, 0.5);//0.5, 0.5, 0.125
        shapes[4] = new SquareGenerator(numberOfPoints, 1.25);
        shapes[5] = new DiamondGenerator(numberOfPoints, 1);
        shapes[6] = new XORGenerator(numberOfPoints);
        shapes[7] = new RandomPolynomialGenerator(numberOfPoints);
        comboShapes.setModel(new DefaultComboBoxModel(shapes));
        comboShapes.setSelectedIndex(shapeIndex);
    }
    private void slideNumberOfPointsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slideNumberOfPointsStateChanged
        labNumberOfPoints.setText(String.valueOf(slideNumberOfPoints.getValue()));
    }//GEN-LAST:event_slideNumberOfPointsStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboShapes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labNumberOfPoints;
    private javax.swing.JSlider slideNumberOfPoints;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.neuroph.netbeans.wizards;

import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.JTextField;

public final class MultiLayerPerceptronVisualPanel1 extends JPanel {

    private static MultiLayerPerceptronVisualPanel1 instance;

    /** Creates new form MultiLayerPerceptronVisualPanel1 */
    private MultiLayerPerceptronVisualPanel1() {
        initComponents();
    }

    public static MultiLayerPerceptronVisualPanel1 getInstance(){
        if(instance==null){
            instance = new MultiLayerPerceptronVisualPanel1();
        }
        return instance;
    }

    @Override
    public String getName() {
        return "Setting Multi Layer Perceptron's parameters";
    }

    public JCheckBox getConnectInputToOutputCheckBox() {
        return connectInputToOutputCheckBox;
    }

    public JTextField getHiddenNeurosField() {
        return hiddenNeurosField;
    }

    public JTextField getInputNeurosField() {
        return inputNeurosField;
    }

    public JTextField getOutputNeurosField() {
        return outputNeurosField;
    }

    public JComboBox getTransferFuntcionComboBox() {
        return transferFuntcionComboBox;
    }

    public JCheckBox getUseBiasNeurosCheckBox() {
        return useBiasNeurosCheckBox;
    }

    public JComboBox getLearningRuleComboBox() {
        return learningRuleComboBox;
    }

    public void clearForm(){
        inputNeurosField.setText("");
        hiddenNeurosField.setText("");
        outputNeurosField.setText("");
        connectInputToOutputCheckBox.setSelected(false);
        useBiasNeurosCheckBox.setSelected(true);
        transferFuntcionComboBox.setSelectedIndex(0);
        learningRuleComboBox.setSelectedIndex(0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        inputNeurosField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        hiddenNeurosField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        outputNeurosField = new javax.swing.JTextField();
        useBiasNeurosCheckBox = new javax.swing.JCheckBox();
        connectInputToOutputCheckBox = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        transferFuntcionComboBox = new javax.swing.JComboBox();
        learningRuleComboBox = new javax.swing.JComboBox();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(MultiLayerPerceptronVisualPanel1.class, "MultiLayerPerceptronVisualPanel1.jLabel1.text")); // NOI18N

        inputNeurosField.setText(org.openide.util.NbBundle.getMessage(MultiLayerPerceptronVisualPanel1.class, "MultiLayerPerceptronVisualPanel1.inputNeurosField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(MultiLayerPerceptronVisualPanel1.class, "MultiLayerPerceptronVisualPanel1.jLabel2.text")); // NOI18N

        hiddenNeurosField.setText(org.openide.util.NbBundle.getMessage(MultiLayerPerceptronVisualPanel1.class, "MultiLayerPerceptronVisualPanel1.hiddenNeurosField.text")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(MultiLayerPerceptronVisualPanel1.class, "MultiLayerPerceptronVisualPanel1.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(MultiLayerPerceptronVisualPanel1.class, "MultiLayerPerceptronVisualPanel1.jLabel3.text")); // NOI18N

        outputNeurosField.setText(org.openide.util.NbBundle.getMessage(MultiLayerPerceptronVisualPanel1.class, "MultiLayerPerceptronVisualPanel1.outputNeurosField.text")); // NOI18N

        useBiasNeurosCheckBox.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(useBiasNeurosCheckBox, org.openide.util.NbBundle.getMessage(MultiLayerPerceptronVisualPanel1.class, "MultiLayerPerceptronVisualPanel1.useBiasNeurosCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(connectInputToOutputCheckBox, org.openide.util.NbBundle.getMessage(MultiLayerPerceptronVisualPanel1.class, "MultiLayerPerceptronVisualPanel1.connectInputToOutputCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(MultiLayerPerceptronVisualPanel1.class, "MultiLayerPerceptronVisualPanel1.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(MultiLayerPerceptronVisualPanel1.class, "MultiLayerPerceptronVisualPanel1.jLabel6.text")); // NOI18N

        transferFuntcionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sigmoid", "Tanh" }));

        learningRuleComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Backpropagation", "Backpropagation with Momentum", "Resilient Propagation", "Dynamic Backpropagation" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(learningRuleComboBox, 0, 286, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(transferFuntcionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(useBiasNeurosCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(connectInputToOutputCheckBox))
                                .addComponent(outputNeurosField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(hiddenNeurosField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(90, 90, 90))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inputNeurosField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(inputNeurosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(hiddenNeurosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(outputNeurosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(useBiasNeurosCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(connectInputToOutputCheckBox)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(transferFuntcionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(learningRuleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox connectInputToOutputCheckBox;
    private javax.swing.JTextField hiddenNeurosField;
    private javax.swing.JTextField inputNeurosField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox learningRuleComboBox;
    private javax.swing.JTextField outputNeurosField;
    private javax.swing.JComboBox transferFuntcionComboBox;
    private javax.swing.JCheckBox useBiasNeurosCheckBox;
    // End of variables declaration//GEN-END:variables
}


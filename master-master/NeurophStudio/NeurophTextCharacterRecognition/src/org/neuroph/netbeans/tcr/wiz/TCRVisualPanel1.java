package org.neuroph.netbeans.tcr.wiz;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.font.FontRenderContext;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;

public final class TCRVisualPanel1 extends JPanel {

    int currentFontSize = 12;
    Font currentFont;
    private BufferedImage image;

    /** Creates new form TCRVisualPanel1 */
    public TCRVisualPanel1() {
        initComponents();
        charactersToLearnArea.setText("A B C D E F G H I J K L M N O P Q R S T U V W X Y Z");
       // fillCombos();
    }

    @Override
    public String getName() {
        return "Create trainig set";
    }

    public JLabel getImageLabel() {
        return imageLabel;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fontCombo = new javax.swing.JComboBox();
        Font[] fonts = { new Font("Arial", Font.PLAIN, 12),
            new Font("Verdana", Font.PLAIN, 12),
            new Font("Times New Roman", Font.BOLD, 12),
            new Font("Courier New", Font.BOLD, 12)};

        ((DefaultComboBoxModel)fontCombo.getModel()).addElement("Select font");
        for (Font font : fonts) {
            ((DefaultComboBoxModel)fontCombo.getModel()).addElement(font.getName());
        }
        jLabel1 = new javax.swing.JLabel();
        sizeCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        charactersToLearnArea = new javax.swing.JTextArea();
        addMoreCharactersCheckBox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        fontCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fontComboItemStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(TCRVisualPanel1.class, "TCRVisualPanel1.jLabel1.text")); // NOI18N

        sizeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "12", "14", "16", "18", "20", "22", "24", "26" }));
        sizeCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sizeComboItemStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(TCRVisualPanel1.class, "TCRVisualPanel1.jLabel2.text")); // NOI18N

        charactersToLearnArea.setEditable(false);
        charactersToLearnArea.setColumns(20);
        charactersToLearnArea.setRows(5);
        charactersToLearnArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                charactersToLearnAreaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(charactersToLearnArea);

        org.openide.awt.Mnemonics.setLocalizedText(addMoreCharactersCheckBox, org.openide.util.NbBundle.getMessage(TCRVisualPanel1.class, "TCRVisualPanel1.addMoreCharactersCheckBox.text")); // NOI18N
        addMoreCharactersCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMoreCharactersCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(TCRVisualPanel1.class, "TCRVisualPanel1.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(imageLabel, org.openide.util.NbBundle.getMessage(TCRVisualPanel1.class, "TCRVisualPanel1.imageLabel.text")); // NOI18N
        imageLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(TCRVisualPanel1.class, "TCRVisualPanel1.jLabel4.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fontCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(sizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(71, 71, 71))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addMoreCharactersCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fontCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addMoreCharactersCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addMoreCharactersCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMoreCharactersCheckBoxActionPerformed
        // TODO add your handling code here:
        if (addMoreCharactersCheckBox.isSelected()) {
            charactersToLearnArea.setEditable(true);
        } else {
            charactersToLearnArea.setEditable(false);
        }
    }//GEN-LAST:event_addMoreCharactersCheckBoxActionPerformed

    private void fontComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fontComboItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            String name = (String) fontCombo.getSelectedItem();
            if (!name.equals("Select font")) {
                currentFont = new Font(name, Font.PLAIN, currentFontSize);
                charactersToLearnArea.setFont(currentFont);
                updateImage();
            }
        }
    }//GEN-LAST:event_fontComboItemStateChanged

    private void sizeComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sizeComboItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            String name = (String) fontCombo.getSelectedItem();
            currentFontSize = Integer.parseInt(sizeCombo.getSelectedItem().toString());
             currentFont = new Font(name, Font.PLAIN, currentFontSize);

            charactersToLearnArea.setFont(currentFont);
            updateImage();
        }
    }//GEN-LAST:event_sizeComboItemStateChanged

    private void charactersToLearnAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_charactersToLearnAreaKeyTyped
       updateImage();
    }//GEN-LAST:event_charactersToLearnAreaKeyTyped

    private void updateImage() {
        if ( fontCombo.getSelectedItem().toString().equals("Select font")) { 
            return;
        }
        
        String text = charactersToLearnArea.getText();
        // FIX Ocr bug
      //  image =ocrUtil.blackAndLightGrayCleaning(  ocrUtil.createImageFromText(text, currentFont) ). ;
        image = createImageFromText(text, currentFont); // now using this method instead
        imageLabel.setIcon(new ImageIcon(image));
        
    }
    
    private BufferedImage createImageFromText(String text, Font font) {
       
        //create the FontRenderContext object which helps us to measure the text
        FontRenderContext frc = new FontRenderContext(null, true, true);
        
        //get the height and width of the text
        Rectangle2D bounds = font.getStringBounds(text, frc);
        int w = (int) bounds.getWidth();
        int h = (int) bounds.getHeight();
       
        //create a BufferedImage object
       BufferedImage writeToImage = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
       
        //calling createGraphics() to get the Graphics2D
        Graphics2D g = writeToImage.createGraphics();
       
        //set color and other parameters
        g.setColor(Color.WHITE);
        g.fillRect(0, 0, w, h);
        g.setColor(Color.BLACK);
        g.setFont(font);
            
       g.drawString(text, (float) bounds.getX(), (float) -bounds.getY());
      
      //releasing resources
      g.dispose(); 
      
      return  writeToImage;
    }

    public BufferedImage getTextImage() {
        return image;
    }

    public JTextArea getCharactersToLearnArea(){
        return charactersToLearnArea;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addMoreCharactersCheckBox;
    private javax.swing.JTextArea charactersToLearnArea;
    private javax.swing.JComboBox fontCombo;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox sizeCombo;
    // End of variables declaration//GEN-END:variables
}

